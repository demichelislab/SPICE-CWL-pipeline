cwlVersion: v1.1
class: Workflow

doc: |-
  Creates a genotype file based on the pileup of the SNPs and then runs EthSEQ.

requirements:
  SchemaDefRequirement:
    types:
      - $import: "../types/ethseq_output_map.yaml"
  SubworkflowFeatureRequirement: {}
  InlineJavascriptRequirement: {}
  StepInputExpressionRequirement: {}
  MultipleInputFeatureRequirement: {}

inputs:
  snps_pileup:
    doc: |-
      The file containing the pileup from which the genotype file will be
      generated.
    type: File
  snps_list_file:
    doc: The file with the SNPs that are included in the EthSEQ model.
    type: File
  sample_name:
    doc: The name of the sample that is passed in input.
    type: string?
  model_gds_file:
    doc: |-
      The GDS file containing the model of the SNPs used for ethnicity
      inference.
    type: File
  threads:
    doc: The number of parallel threads that will be used for computation.
    type: int?
  enable_plot:
    doc: |-
      If true, a graphical representation of the location of the sample in the
      PCA space where the ethnicity is inferred is created.
    type: boolean
    default: false
  log_to_file:
    doc: |-
      If true, the output generated by each tool will be redirected to a
      file. Otherwise the output will be printed on the output.
    type: boolean
    default: true

outputs:
  output:
    doc: The output directory produced by EthSEQ.
    type: Directory?
    outputSource: merge_output/output
  output_map:
    doc: |-
      A data structure that will allow for easy access to the various outputs.
      produced by EthSEQ.
    type: out_map:ethseq_output_map?
    outputSource: merge_output/output_map
  log_files:
    doc: |-
      The log file, if enabled, that captures the output generated by each tool.
    type: File[]?
    outputSource:
      - pileup_to_genotype/log_file
      - ethseq/log_file

steps:
  pileup_to_genotype:
    doc: Generates a genotype VCF file for the SNPs part of the EthSEQ model
      from the pileup of all the SNPs.
    run: ../tools/pileup_to_genotype.cwl
    in:
      snps_pileup: snps_pileup
      snps_list_file: snps_list_file
      sample_name: sample_name
      log_to_file: log_to_file
    out:
      - output
      - log_file
  ethseq:
    doc: Runs EthSEQ using the genotypes generated in the previous step.
    run: ../tools/ethseq.cwl
    in:
      model_gds_file: model_gds_file
      genotype_vcf_file: pileup_to_genotype/output
      threads: threads
      enable_plot: enable_plot
      log_to_file: log_to_file
    out:
      - output
      - output_map
      - log_file
  merge_output:
    doc: Merges outputs of each step in a single output port and output_map.
    in:
      pileup_to_genotype: pileup_to_genotype/output
      ethseq: ethseq/output
      ethseq_output_map: ethseq/output_map
    out:
      - output
      - output_map
    run:
      class: ExpressionTool
      requirements:
        LoadListingRequirement:
          loadListing: shallow_listing
      inputs:
        pileup_to_genotype: File?
        ethseq: Directory?
        ethseq_output_map: out_map:ethseq_output_map?
      outputs:
        output: Directory?
        output_map: out_map:ethseq_output_map?
      expression: |
        ${
          var output_directory = inputs.ethseq,
              output_map       = inputs.ethseq_output_map;
          delete output_directory['location'];
          output_directory.listing.push(inputs.pileup_to_genotype);
          output_map.genotypes = inputs.pileup_to_genotype;
          return {
            output:     output_directory,
            output_map: output_map
          };
        }

$namespaces:
  out_map: "../types/ethseq_output_map.yaml#"
