cwlVersion: v1.1
class: Workflow

doc: |-
  Creates a genotype file starting from the pileup of the SNPs and then runs
  EthSEQ.

requirements:
  SchemaDefRequirement:
    types:
      - $import: "../types/snvs_coverage_output_map.yaml"
  SubworkflowFeatureRequirement: {}
  InlineJavascriptRequirement: {}
  StepInputExpressionRequirement: {}
  MultipleInputFeatureRequirement: {}

inputs:
  bam_file_normal:
    doc: The BAM file of the tumor sample.
    type: File
    secondaryFiles: [^.bai, .bai]
  bam_file_tumor:
    doc: The BAM file of the tumor sample.
    type: File
    secondaryFiles: [^.bai, .bai]
  variants_vcf:
    type: File
  reference_genome_fasta_file:
    doc: The file containing the reference genome in FASTA format.
    type: File
  output_directory_name:
    doc: The name of the folder where the snv coverage outputs will be stored.
    type: string?
    default: "snvs_coverage"
  threads:
    doc: The number of parallel threads that will be used for computation.
    type: int
    default: 1
  log_to_file:
    doc: |-
      If true, the output generated by each tool will be redirected to a file.
      Otherwise the output will be printed on the output.
    type: boolean
    default: true

outputs:
  output:
    doc: |-
      The output directory generated by CNVkit including the exported segfile.
    type: Directory?
    outputSource: merge_output/output
  output_map:
    doc: |-
      A data structure that will allow easy access to the various outputs of the
      SNV coverage workflow.
    type: out_map:snvs_coverage_output_map?
    outputSource: merge_output/output_map
  log_files:
    doc: |-
      The log file, if enabled, that capture the output produced by each tool.
    type: File[]?
    outputSource:
      - vcf_snvs_to_bed/log_file
      - mutect_only_snvs/log_file
      - snv_coverage_normal/log_file
      - snv_coverage_tumor/log_file

steps:
  vcf_snvs_to_bed:
    doc: |-
      Generates a BED file starting from the VCF file that contains the
      somatic variants.
    run: ../tools/vcf_snvs_to_bed.cwl
    in:
      variants_vcf: variants_vcf
      log_to_file: log_to_file
    out:
      - output
      - log_file
  mutect_only_snvs:
    doc: |-
      Filters out only the SNVs from a VCF file that contains the all somatic
      variants.
    run: ../tools/mutect_only_snvs.cwl
    in:
      variants_vcf: variants_vcf
      log_to_file: log_to_file
    out:
      - output
      - log_file
  snv_coverage_normal:
    doc: Computes the coverage at SNV positions in the normal sample.
    run: ../tools/pacbam_pileup.cwl
    in:
      bam_file: bam_file_normal
      regions_bed_file: vcf_snvs_to_bed/output
      snps_vcf_file: mutect_only_snvs/output
      reference_genome_fasta_file: reference_genome_fasta_file
      output_directory_name:
        default: "pileup_normal"
      threads: threads
      log_filename:
        default: "pileup_snvs_normal.log"
      log_to_file: log_to_file
    out:
      - output
      - log_file
  snv_coverage_tumor:
    doc: Computes the coverage at SNV positions in the tumor sample.
    run: ../tools/pacbam_pileup.cwl
    in:
      bam_file: bam_file_tumor
      regions_bed_file: vcf_snvs_to_bed/output
      snps_vcf_file: mutect_only_snvs/output
      reference_genome_fasta_file: reference_genome_fasta_file
      output_directory_name:
        default: "pileup_tumor"
      threads: threads
      log_filename:
        default: "pileup_snvs_tumor.log"
      log_to_file: log_to_file
    out:
      - output
      - log_file
  merge_output:
    doc: Merges outputs of each step in a single output port and output_map.
    in:
      vcf_snvs_to_bed: vcf_snvs_to_bed/output
      mutect_only_snvs: mutect_only_snvs/output
      snv_coverage_normal: snv_coverage_normal/output
      snv_coverage_tumor: snv_coverage_tumor/output
      output_directory_name: output_directory_name
    out:
      - output
      - output_map
    run:
      class: ExpressionTool
      requirements:
        LoadListingRequirement:
          loadListing: shallow_listing
      inputs:
        vcf_snvs_to_bed: File?
        mutect_only_snvs: File?
        snv_coverage_normal: File?
        snv_coverage_tumor: File?
        output_directory_name: string
      outputs:
        output: Directory?
        output_map: out_map:snvs_coverage_output_map?
      expression: |
        ${
          return {
            output: {
              class: "Directory",
              basename: inputs.output_directory_name,
              listing: [
                inputs.vcf_snvs_to_bed,
                inputs.mutect_only_snvs,
                inputs.snv_coverage_normal,
                inputs.snv_coverage_tumor
              ]
            },
            output_map: {
              snvs_bed:             inputs.vcf_snvs_to_bed,
              vcf_only_snvs:        inputs.mutect_only_snvs,
              snvs_coverage_normal: inputs.snv_coverage_normal,
              snvs_coverage_tumor:  inputs.snv_coverage_tumor
            }
          };
        }

$namespaces:
  out_map: "../types/snvs_coverage_output_map.yaml#"
